"""Remove full_name from User model

Revision ID: 81b1fead8c3b
Revises: {上一版本的ID，这里留空或保持原样}
Create Date: {创建日期}

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel # 确保导入


# revision identifiers, used by Alembic.
revision: str = '81b1fead8c3b'
down_revision: Union[str, None] = 'f7b7155a8268'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# --- 新增：为方便复用，先定义好 ENUM 类型 ---
user_role_enum = sa.Enum('ADMIN', 'USER', name='userrole')


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- 步骤 1: 手动创建 ENUM 类型 ---
    user_role_enum.create(op.get_bind(), checkfirst=False)

    # --- 步骤 2: 添加新的 'role' 列 ---
    op.add_column('user', sa.Column('role', user_role_enum, nullable=False, server_default='USER'))

    # --- 步骤 3: 添加新的 'mc_name' 列 ---
    op.add_column('user', sa.Column('mc_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_index(op.f('ix_user_mc_name'), 'user', ['mc_name'], unique=True)

    # --- 步骤 4: 移除旧的 'full_name' 列 ---
    op.drop_column('user', 'full_name')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # --- 步骤 1: 恢复 'full_name' 列 (与 upgrade 相反) ---
    op.add_column('user', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))

    # --- 步骤 2: 移除 'mc_name' 列和索引 ---
    op.drop_index(op.f('ix_user_mc_name'), table_name='user')
    op.drop_column('user', 'mc_name')

    # --- 步骤 3: 移除 'role' 列 ---
    op.drop_column('user', 'role')

    # --- 步骤 4: 手动删除 ENUM 类型 ---
    user_role_enum.drop(op.get_bind(), checkfirst=False)

    # ### end Alembic commands ###